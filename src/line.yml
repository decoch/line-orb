version: 2.1

################################################
## GitHub: https://github.com/decoch/line-orb ##
################################################

description: |
  Easily integrate custom Line notifications. Create custom messages for any job or receive status updates.

## Requirements ##
## - Bash
## - cURL

commands:
  ## NOTIFY ##
  notify:
    description: Notify a line with a custom message
    parameters:
      token:
        description: Enter either your token value or use the CircleCI UI to add your token under the 'LINE_TOKEN' env var
        type: string
        default: ${LINE_TOKEN}
      message:
        description: Enter custom message.
        type: string
        default: Your job on CircleCI has completed.
      mentions:
        description: A comma separated list of user name. No spaces.
        type: string
        default: ""
    steps:
      - run:
          name: Line Notification
          command: |
            # Provide error if non-bash shell
            if [ $(echo $SHELL | grep -c bash) -ne 1 ]; then
              echo Bash not installed.
              exit 1
            fi
            # Provide error if no token is set and error. Otherwise continue
            if [ -z "<< parameters.token >>" ]; then
              echo "NO LINE TOKEN SET"
              echo "Please input your LINE_TOKEN value either in the settings for this project, or as a parameter for this orb."
              exit 1
            else
              # Webhook properly set.
              echo Notifying Line
              # Create Members string
              if [ -n "<< parameters.mentions >>" ]; then
                IFS="," read -ra LINE_MEMBERS \<<< "<< parameters.mentions >>"
                for i in "${LINE_MEMBERS[@]}"; do
                  LINE_MENTIONS="${LINE_MENTIONS}<@${i}> "
                done
              fi
              curl -X POST -H "Authorization: Bearer << parameters.token >>" -d "message=${LINE_MENTIONS}<< parameters.message >>" https://notify-api.line.me/api/notify
            fi
